{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Meghan Schaeffer In this static site, I reflect on my experience expanding my digital literacy as I learned to use technologies such as HTML and CSS, Wordpress, DITA XML, and Markdown. I also highlight a few projects that I worked on throughout the semester and narrate the processes that I went through to produce the necessary outputs for each. Through working with each of these technologies, I have learned to grow my digital literacy tremendously since the start of the semester. To see where I started in January, my first Digital Literacy Narrative outlines how I used to approach technology and where I would go to adopt new skills. As a summary of where I started my digital literacy journey, I initially had only been exposed to Google Suite applications, Microsoft Word, Canva, and Wix. As far as writing with digital technologies, my expertise spanned only as far as using social media to write comments and draft my own posts. Biggest Takeaways As a result of this course, I have learned not only about the vast range of technologies available to me to support my learning, but also the ways in which I personally learn best. I have gained valuable experiences working with the markup languages and applications mentioned above which prove to be rather valuable skills to have in the greater field of technical writing and communication. Throughout the semester, I have found that I learn quickly when I take advantage of several resources including writen instruction, video tutorials, and hands-on practice. It seems that nearly every tool that I may need to learn has one or all of these options available online whether it be through Youtube, Mozilla articles, or sites more specific to and actually written by technical writers. Working with HTML One of the first projects I tackled in WRIT 4662W was that of creating a static site using HTML and eventually adding some CSS to it for a little more personalization. I then hosted my static site using Github. Working with DITA DITA XML was one of my favorite projects to work on. With the help of the Oxygen Editor, I developed a concept topic, a few task topics, and reference topic to explain and document how to login to the University of Minnesota Zoom domain. Working with a CMS About halfway through the semester, I worked with my classmates to help redesign the Minnesota Austin Healey Club's (MAHC) current website. Throughout this project, I helped design wireframes and used Wordpress to recreate the website's home page. Practicing Documentation with Markdown This page is just a brief explanation of how to generate a live preview and build HTML files when working with Markdown in Mkdocs.","title":"Home"},{"location":"#meghan-schaeffer","text":"In this static site, I reflect on my experience expanding my digital literacy as I learned to use technologies such as HTML and CSS, Wordpress, DITA XML, and Markdown. I also highlight a few projects that I worked on throughout the semester and narrate the processes that I went through to produce the necessary outputs for each. Through working with each of these technologies, I have learned to grow my digital literacy tremendously since the start of the semester. To see where I started in January, my first Digital Literacy Narrative outlines how I used to approach technology and where I would go to adopt new skills. As a summary of where I started my digital literacy journey, I initially had only been exposed to Google Suite applications, Microsoft Word, Canva, and Wix. As far as writing with digital technologies, my expertise spanned only as far as using social media to write comments and draft my own posts.","title":"Meghan Schaeffer"},{"location":"#biggest-takeaways","text":"As a result of this course, I have learned not only about the vast range of technologies available to me to support my learning, but also the ways in which I personally learn best. I have gained valuable experiences working with the markup languages and applications mentioned above which prove to be rather valuable skills to have in the greater field of technical writing and communication. Throughout the semester, I have found that I learn quickly when I take advantage of several resources including writen instruction, video tutorials, and hands-on practice. It seems that nearly every tool that I may need to learn has one or all of these options available online whether it be through Youtube, Mozilla articles, or sites more specific to and actually written by technical writers.","title":"Biggest Takeaways"},{"location":"#working-with-html","text":"One of the first projects I tackled in WRIT 4662W was that of creating a static site using HTML and eventually adding some CSS to it for a little more personalization. I then hosted my static site using Github.","title":"Working with HTML"},{"location":"#working-with-dita","text":"DITA XML was one of my favorite projects to work on. With the help of the Oxygen Editor, I developed a concept topic, a few task topics, and reference topic to explain and document how to login to the University of Minnesota Zoom domain.","title":"Working with DITA"},{"location":"#working-with-a-cms","text":"About halfway through the semester, I worked with my classmates to help redesign the Minnesota Austin Healey Club's (MAHC) current website. Throughout this project, I helped design wireframes and used Wordpress to recreate the website's home page.","title":"Working with a CMS"},{"location":"#practicing-documentation-with-markdown","text":"This page is just a brief explanation of how to generate a live preview and build HTML files when working with Markdown in Mkdocs.","title":"Practicing Documentation with Markdown"},{"location":"dita/","text":"DITA XML was one of my favorite projects to work on. With the help of the Oxygen Editor, I developed a concept topic, a few task topics, and a reference topic to explain and document how to login to the University of Minnesota Zoom domain. One of the transformations that I configured from the Oxygen Editor was a plain HTML site that I published using Github which can be found here. The Importance of DITA As a technical writing student who has started to explore future career options, I knew going into this project that DITA is a highly sought-after skill in the field and that it would therefore be necessary for me to commit myself to learning as much as I could before submitting my final project. DITA is a great tool for technical documentation that outlines how to do a certain skill or task. As I learned from readings, DITA is also beneficial for being able to reuse content. You can just write something once and then present it with different styles in different places if needed by referencing the same tag in multiple pages. Learning the Basics As with any new technology, there was a learning curve for me as I adjusted to the various features and norms of the Oxygen application and the DITA language itself. By following the videos and book chapters from class, I caught on pretty easily and was able to create a map, concept topic, task topic, and reference topic. Once again, it was extremely helpful for me to just get hands-on experience with the technology and use my problem solving skills to figure out the more detailed components on my own. I enjoyed sorting through the content I had in front of me and organizing it based on the purpose it served in my document. Structured authoring in general is something that seems to click for me, so I look forward to exploring DITA further in the future whether it be in my career or for my own personal use and growth as a technical communicator. Highlighting the Final Product I also would like to highlight the other transformation that I configured in this project which was a PDF output. Below are some images from a few of the pages that were generated. These screenshots showcase portions of my concept, task, and reference topics respectively.","title":"DITA"},{"location":"dita/#the-importance-of-dita","text":"As a technical writing student who has started to explore future career options, I knew going into this project that DITA is a highly sought-after skill in the field and that it would therefore be necessary for me to commit myself to learning as much as I could before submitting my final project. DITA is a great tool for technical documentation that outlines how to do a certain skill or task. As I learned from readings, DITA is also beneficial for being able to reuse content. You can just write something once and then present it with different styles in different places if needed by referencing the same tag in multiple pages.","title":"The Importance of DITA"},{"location":"dita/#learning-the-basics","text":"As with any new technology, there was a learning curve for me as I adjusted to the various features and norms of the Oxygen application and the DITA language itself. By following the videos and book chapters from class, I caught on pretty easily and was able to create a map, concept topic, task topic, and reference topic. Once again, it was extremely helpful for me to just get hands-on experience with the technology and use my problem solving skills to figure out the more detailed components on my own. I enjoyed sorting through the content I had in front of me and organizing it based on the purpose it served in my document. Structured authoring in general is something that seems to click for me, so I look forward to exploring DITA further in the future whether it be in my career or for my own personal use and growth as a technical communicator.","title":"Learning the Basics"},{"location":"dita/#highlighting-the-final-product","text":"I also would like to highlight the other transformation that I configured in this project which was a PDF output. Below are some images from a few of the pages that were generated. These screenshots showcase portions of my concept, task, and reference topics respectively.","title":"Highlighting the Final Product"},{"location":"html/","text":"One of the first projects I tackled in WRIT 4662W was that of creating a static site using HTML and eventually adding some CSS to it for a little more personalization. I then hosted my static site using Github which can be found here. Not only was this the first major project of the course, but it was also the first time I actively worked to adopt a new skill related to digital technology. In other words, this was essentially the first time I knowingly attempted to expand my digital literacy. That being said, this project taught me the hard skills of HTML, CSS, and Github, as well as things about myself and my own learning style. Learning the Basics To expand my skills so that I could complete the assignment in a way that made me feel proud, I committed myself to taking enough time out of my day to really engage with the resources provided rather than just skimming through them and hoping to go over the topic in class in more detail. I dedicated a few hours each day solely for reading through various articles and other resources linked on Canvas. I took detailed notes and really tried to understand each component before attempting to apply them myself. Once I felt I had at least an understanding of what it is I was trying to learn, I turned to more specific tutorials, both written and recorded, and attempted to mimic the skills on my own. Before each class, I always had at least a small portion of the skill (HTML, CSS, or GitHub) completed to make room for more specific questions that I might not have been able to answer just from readings and videos. This way, I felt I was using the class time to my fullest advantage. Moving Forward The methods described above proved to be the foundation for my learning of the rest of the skills taught throughout the semester. This assignment introduced me to the multitude of resources that are available to me for free that I have overlooked for the past decade or more. Additionally, as I explored these resources, I began to get an idea of what works best for me when it comes to being successful with new digital tools/skills. In particular, I found it most useful to have a combination of videos, step-by-step instructions, and hands on practice to feel comfortable with a new skill.","title":"HTML"},{"location":"html/#learning-the-basics","text":"To expand my skills so that I could complete the assignment in a way that made me feel proud, I committed myself to taking enough time out of my day to really engage with the resources provided rather than just skimming through them and hoping to go over the topic in class in more detail. I dedicated a few hours each day solely for reading through various articles and other resources linked on Canvas. I took detailed notes and really tried to understand each component before attempting to apply them myself. Once I felt I had at least an understanding of what it is I was trying to learn, I turned to more specific tutorials, both written and recorded, and attempted to mimic the skills on my own. Before each class, I always had at least a small portion of the skill (HTML, CSS, or GitHub) completed to make room for more specific questions that I might not have been able to answer just from readings and videos. This way, I felt I was using the class time to my fullest advantage.","title":"Learning the Basics"},{"location":"html/#moving-forward","text":"The methods described above proved to be the foundation for my learning of the rest of the skills taught throughout the semester. This assignment introduced me to the multitude of resources that are available to me for free that I have overlooked for the past decade or more. Additionally, as I explored these resources, I began to get an idea of what works best for me when it comes to being successful with new digital tools/skills. In particular, I found it most useful to have a combination of videos, step-by-step instructions, and hands on practice to feel comfortable with a new skill.","title":"Moving Forward"},{"location":"walkthrough/","text":"This page is just a brief explanation of how to generate a live preview and build HTML files when working with Markdown and Mkdocs on a Mac computer. To Generate a Live Preview Ceate a new folder on your desktop in which you will put the files for your new project. To do so, run the following command on Terminal: mkdocs new project-folder On Terminal, navigate to your project folder by running the following command: cd desktop/project-folder Your project folder should have both a mkdocs.yml file and a docs folder. Before running the next command, you need to be sure you are situated in the \"root\" of your project folder which is wherever the .yml file is located. To do so, run the following command: mkdocs serve This should process and build the necessary documentation and should look something like this on Terminal: Copy and paste the http://127.0.0.1:8000/ link into a browser to see the live preview of your site. To Quit The Live Preview Use the following keyboard shortcut in Terminal to end the live preview: Control + C Terminal should display a message that says \"Shutting down.\" You are now back in the root of your project folder. To Build Your Site (Create HTML Files): Run the following command in Terminal: mkdocs build Check your project folder to see the newly generated \"site\" directory. This folder should contain directories for assets, search, a 404 page, an index.html file, and some other XML files. Now, you can upload your site to Github and set it up with Github pages. The contents of the site folder will be uploaded right to Github.","title":"MkDocs Walkthrough"},{"location":"walkthrough/#to-generate-a-live-preview","text":"Ceate a new folder on your desktop in which you will put the files for your new project. To do so, run the following command on Terminal: mkdocs new project-folder On Terminal, navigate to your project folder by running the following command: cd desktop/project-folder Your project folder should have both a mkdocs.yml file and a docs folder. Before running the next command, you need to be sure you are situated in the \"root\" of your project folder which is wherever the .yml file is located. To do so, run the following command: mkdocs serve This should process and build the necessary documentation and should look something like this on Terminal: Copy and paste the http://127.0.0.1:8000/ link into a browser to see the live preview of your site.","title":"To Generate a Live Preview"},{"location":"walkthrough/#to-quit-the-live-preview","text":"Use the following keyboard shortcut in Terminal to end the live preview: Control + C Terminal should display a message that says \"Shutting down.\" You are now back in the root of your project folder.","title":"To Quit The Live Preview"},{"location":"walkthrough/#to-build-your-site-create-html-files","text":"Run the following command in Terminal: mkdocs build Check your project folder to see the newly generated \"site\" directory. This folder should contain directories for assets, search, a 404 page, an index.html file, and some other XML files. Now, you can upload your site to Github and set it up with Github pages. The contents of the site folder will be uploaded right to Github.","title":"To Build Your Site (Create HTML Files):"},{"location":"wordpress/","text":"About halfway through the semester, I worked with my classmates to help redesign the Minnesota Austin Healey Club's (MAHC) current website . Throughout this project, I helped design wireframes and used Wordpress to recreate the website's home page. Creating Wireframes Before diving into the site, I first discussed with the class our user groups, the conversations we wanted our site to have with those users, and general design considerations with respect to our audience and website purposes. With that foundation built, I began helping to create wireframes to sort out our individual visions for the site and how we wanted to structure the content across the different pages. I worked with a small group and used Google Slides to create these wireframes. This entire process was rather enlightening and made me realize the complexity of project management when it comes to building a website starting with broad ideas and narrowing them down to specific goals and tasks. Working with Wordpress Before this project, I had never worked with WordPress and had minimal experience in other content management systems in general. Learning how to use WordPress seemed straightforward at first until I actually started trying to input the content. As a result of designing the wireframes, I had a solid vision of what I wanted the site to look like, but there were many limitations presented by WordPress that prevented me from freely designing the pages. For instance, I was not able to resize the columns, change the style of the text, or freely relocate the different elements. It was apparent to me that WordPress is a great site for users who just want to get a website started. That being said, I now know for my future projects that no template or theme is going to match exactly what I have drafted from a wireframe. WordPress also had extreme limitations when it came to collaboration. The site did not allow more than one user to edit the page at one time. My partner and I eventually adjusted to this limitation by communicating with each other exactly when we were going to be editing the page, but it was more time-consuming to have to wait for them to complete their work before I could begin my own. For the flexible time constraints of the project, however, this wasn\u2019t an end-all situation. In the future, it will be helpful to at least have had this experience so that I can better understand my options when it comes to project management and website development. The Results I chose to help redesign the home page for the project, which I knew would be the first thing our users see when they view the MAHC website. I felt that the most important content to highlight here was the logo, a brief welcome message along with the club\u2019s mission statement, upcoming events, and important links and contact information. With the wireframe designs in mind, I focused on creating a way to link all of the other website pages somewhere on the home page, separate from the navigation bar. I thought of the home page not just as an introduction to the club, but sort of as an introduction to the site as well. To do this, I designated a button in the middle of the page to serve as a link to the About page and turned the three picture columns into links to the New Members page, Events page, and Newsletters page as seen in the image below.","title":"Client Project"},{"location":"wordpress/#creating-wireframes","text":"Before diving into the site, I first discussed with the class our user groups, the conversations we wanted our site to have with those users, and general design considerations with respect to our audience and website purposes. With that foundation built, I began helping to create wireframes to sort out our individual visions for the site and how we wanted to structure the content across the different pages. I worked with a small group and used Google Slides to create these wireframes. This entire process was rather enlightening and made me realize the complexity of project management when it comes to building a website starting with broad ideas and narrowing them down to specific goals and tasks.","title":"Creating Wireframes"},{"location":"wordpress/#working-with-wordpress","text":"Before this project, I had never worked with WordPress and had minimal experience in other content management systems in general. Learning how to use WordPress seemed straightforward at first until I actually started trying to input the content. As a result of designing the wireframes, I had a solid vision of what I wanted the site to look like, but there were many limitations presented by WordPress that prevented me from freely designing the pages. For instance, I was not able to resize the columns, change the style of the text, or freely relocate the different elements. It was apparent to me that WordPress is a great site for users who just want to get a website started. That being said, I now know for my future projects that no template or theme is going to match exactly what I have drafted from a wireframe. WordPress also had extreme limitations when it came to collaboration. The site did not allow more than one user to edit the page at one time. My partner and I eventually adjusted to this limitation by communicating with each other exactly when we were going to be editing the page, but it was more time-consuming to have to wait for them to complete their work before I could begin my own. For the flexible time constraints of the project, however, this wasn\u2019t an end-all situation. In the future, it will be helpful to at least have had this experience so that I can better understand my options when it comes to project management and website development.","title":"Working with Wordpress"},{"location":"wordpress/#the-results","text":"I chose to help redesign the home page for the project, which I knew would be the first thing our users see when they view the MAHC website. I felt that the most important content to highlight here was the logo, a brief welcome message along with the club\u2019s mission statement, upcoming events, and important links and contact information. With the wireframe designs in mind, I focused on creating a way to link all of the other website pages somewhere on the home page, separate from the navigation bar. I thought of the home page not just as an introduction to the club, but sort of as an introduction to the site as well. To do this, I designated a button in the middle of the page to serve as a link to the About page and turned the three picture columns into links to the New Members page, Events page, and Newsletters page as seen in the image below.","title":"The Results"}]}